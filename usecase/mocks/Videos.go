// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/javiertlopez/awesome/model"
	mock "github.com/stretchr/testify/mock"
)

// Videos is an autogenerated mock type for the Videos type
type Videos struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, anyVideo
func (_m *Videos) Create(ctx context.Context, anyVideo model.Video) (model.Video, error) {
	ret := _m.Called(ctx, anyVideo)

	var r0 model.Video
	if rf, ok := ret.Get(0).(func(context.Context, model.Video) model.Video); ok {
		r0 = rf(ctx, anyVideo)
	} else {
		r0 = ret.Get(0).(model.Video)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, model.Video) error); ok {
		r1 = rf(ctx, anyVideo)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByID provides a mock function with given fields: ctx, id
func (_m *Videos) GetByID(ctx context.Context, id string) (model.Video, error) {
	ret := _m.Called(ctx, id)

	var r0 model.Video
	if rf, ok := ret.Get(0).(func(context.Context, string) model.Video); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Get(0).(model.Video)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewVideos interface {
	mock.TestingT
	Cleanup(func())
}

// NewVideos creates a new instance of Videos. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewVideos(t mockConstructorTestingTNewVideos) *Videos {
	mock := &Videos{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
